# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qrl.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='qrl.proto',
  package='qrl',
  syntax='proto3',
  serialized_pb=_b('\n\tqrl.proto\x12\x03qrl\x1a\x1fgoogle/protobuf/timestamp.proto\"\x17\n\x07PingReq\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1b\n\x08PongResp\x12\x0f\n\x07message\x18\x01 \x01(\t\"\x12\n\x10GetKnownPeersReq\"9\n\x11GetKnownPeersResp\x12$\n\x0bknown_peers\x18\x01 \x01(\x0b\x32\x0f.qrl.KnownPeers\".\n\x17GetAddressStateLocalReq\x12\x13\n\x0b\x61\x64\x64ress_idx\x18\x01 \x01(\r\"%\n\x12GetAddressStateReq\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\"7\n\x13GetAddressStateResp\x12 \n\x05state\x18\x01 \x01(\x0b\x32\x11.qrl.AddressState\"\x80\x01\n\x10TransferCoinsReq\x12\x14\n\x0c\x61\x64\x64ress_from\x18\x01 \x01(\t\x12\x12\n\naddress_to\x18\x02 \x01(\t\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x04\x12\x0b\n\x03\x66\x65\x65\x18\x04 \x01(\x04\x12\x0f\n\x07xmss_pk\x18\x05 \x01(\x0c\x12\x14\n\x0cxmss_ots_key\x18\x06 \x01(\x0c\"C\n\x11TransferCoinsResp\x12.\n\x14transaction_unsigned\x18\x01 \x01(\x0b\x32\x10.qrl.Transaction\"B\n\x12PushTransactionReq\x12,\n\x12transaction_signed\x18\x01 \x01(\x0b\x32\x10.qrl.Transaction\"/\n\x16PushTransactionReqResp\x12\x15\n\rsome_response\x18\x01 \x01(\t\"+\n\x0bWalletStore\x12\x1c\n\x07wallets\x18\x01 \x03(\x0b\x32\x0b.qrl.Wallet\"?\n\x06Wallet\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x10\n\x08mnemonic\x18\x02 \x01(\t\x12\x12\n\nxmss_index\x18\x03 \x01(\x05\"&\n\nKnownPeers\x12\x18\n\x05peers\x18\x01 \x03(\x0b\x32\t.qrl.Peer\"\x12\n\x04Peer\x12\n\n\x02ip\x18\x01 \x01(\t\"z\n\x0c\x41\x64\x64ressState\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\x12\r\n\x05nonce\x18\x03 \x01(\x04\x12\x11\n\tpubhashes\x18\x04 \x03(\x0c\x12&\n\x0ctransactions\x18\x05 \x03(\x0b\x32\x10.qrl.Transaction\"\x8f\x02\n\x0b\x42lockHeader\x12\x14\n\x0c\x62lock_number\x18\x01 \x01(\x04\x12\r\n\x05\x65poch\x18\x02 \x01(\x04\x12-\n\ttimestamp\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x13\n\x0bhash_header\x18\x04 \x01(\x0c\x12\x18\n\x10hash_header_prev\x18\x05 \x01(\x0c\x12\x14\n\x0creward_block\x18\x06 \x01(\x04\x12\x12\n\nreward_fee\x18\x07 \x01(\x04\x12\x13\n\x0bmerkel_root\x18\x08 \x01(\x0c\x12\x13\n\x0bhash_reveal\x18\t \x01(\x0c\x12\x11\n\thash_vote\x18\n \x01(\x0c\x12\x16\n\x0estake_selector\x18\x0b \x01(\t\"\xc7\x01\n\x05\x42lock\x12 \n\x06header\x18\x01 \x01(\x0b\x32\x10.qrl.BlockHeader\x12&\n\x0ctransactions\x18\x02 \x03(\x0b\x32\x10.qrl.Transaction\x12*\n\x10\x64up_transactions\x18\x03 \x03(\x0b\x32\x10.qrl.Transaction\x12 \n\x05state\x18\x04 \x03(\x0b\x32\x11.qrl.AddressState\x12\x12\n\nstake_list\x18\x05 \x03(\t\x12\x12\n\nstake_seed\x18\x06 \x01(\x0c\"\x85\x05\n\x0bTransaction\x12#\n\x04type\x18\x01 \x01(\x0e\x32\x15.qrl.Transaction.Type\x12\r\n\x05nonce\x18\x02 \x01(\x04\x12\x11\n\taddr_from\x18\x03 \x01(\x0c\x12\x18\n\x10transaction_hash\x18\x05 \x01(\x0c\x12\x13\n\x0bpublic_hash\x18\x04 \x01(\x0c\x12\x12\n\npublic_key\x18\x06 \x01(\x0c\x12\x11\n\tsignature\x18\x07 \x01(\x0c\x12\x0f\n\x07\x61\x64\x64r_to\x18\x08 \x01(\x0c\x12\x0e\n\x06\x61mount\x18\t \x01(\x04\x12\x0b\n\x03\x66\x65\x65\x18\n \x01(\x04\x12\r\n\x05\x65poch\x18\x0b \x01(\x04\x12\x1d\n\x15\x66inalized_blocknumber\x18\x0c \x01(\x04\x12\x1c\n\x14\x66inalized_headerhash\x18\r \x01(\x0c\x12\x18\n\x10public_key_slave\x18\x0e \x01(\x0c\x12\x12\n\nstake_hash\x18\x0f \x01(\x0c\x12\x18\n\x10\x64up_block_number\x18\x10 \x01(\x04\x12\x1c\n\x14\x64up_hash_header_prev\x18\x11 \x01(\x04\x12\x1b\n\x13\x64up_coinbase1_hhash\x18\x12 \x01(\x0c\x12\x1b\n\x13\x64up_coinbase2_hhash\x18\x13 \x01(\x0c\x12\'\n\rdup_coinbase1\x18\x14 \x01(\x0b\x32\x10.qrl.Transaction\x12\'\n\rdup_coinbase2\x18\x15 \x01(\x0b\x32\x10.qrl.Transaction\x12\x10\n\x08pk_kyber\x18\x16 \x01(\x0c\x12\x10\n\x08pk_tesla\x18\x17 \x01(\x0c\"I\n\x04Type\x12\x0c\n\x08TRANSFER\x10\x00\x12\t\n\x05STAKE\x10\x01\x12\x0c\n\x08\x43OINBASE\x10\x02\x12\x0b\n\x07LATTICE\x10\x03\x12\r\n\tDUPLICATE\x10\x04\x32r\n\x07P2PNode\x12%\n\x04Ping\x12\x0c.qrl.PingReq\x1a\r.qrl.PongResp\"\x00\x12@\n\rGetKnownPeers\x12\x15.qrl.GetKnownPeersReq\x1a\x16.qrl.GetKnownPeersResp\"\x00\x32\xf4\x02\n\tPublicAPI\x12@\n\rGetKnownPeers\x12\x15.qrl.GetKnownPeersReq\x1a\x16.qrl.GetKnownPeersResp\"\x00\x12P\n\x14GetAddressStateLocal\x12\x1c.qrl.GetAddressStateLocalReq\x1a\x18.qrl.GetAddressStateResp\"\x00\x12\x46\n\x0fGetAddressState\x12\x17.qrl.GetAddressStateReq\x1a\x18.qrl.GetAddressStateResp\"\x00\x12@\n\rTransferCoins\x12\x15.qrl.TransferCoinsReq\x1a\x16.qrl.TransferCoinsResp\"\x00\x12I\n\x0fPushTransaction\x12\x17.qrl.PushTransactionReq\x1a\x1b.qrl.PushTransactionReqResp\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])



_TRANSACTION_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='qrl.Transaction.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TRANSFER', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STAKE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COINBASE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LATTICE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DUPLICATE', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1988,
  serialized_end=2061,
)
_sym_db.RegisterEnumDescriptor(_TRANSACTION_TYPE)


_TIMESTAMP = _descriptor.Descriptor(
  name='Timestamp',
  full_name='qrl.Timestamp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='seconds', full_name='qrl.Timestamp.seconds', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nanos', full_name='qrl.Timestamp.nanos', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=61,
)


_PINGREQ = _descriptor.Descriptor(
  name='PingReq',
  full_name='qrl.PingReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qrl.PingReq.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=86,
)


_PONGRESP = _descriptor.Descriptor(
  name='PongResp',
  full_name='qrl.PongResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='qrl.PongResp.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=115,
)


_GETKNOWNPEERSREQ = _descriptor.Descriptor(
  name='GetKnownPeersReq',
  full_name='qrl.GetKnownPeersReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=117,
  serialized_end=135,
)


_GETKNOWNPEERSRESP = _descriptor.Descriptor(
  name='GetKnownPeersResp',
  full_name='qrl.GetKnownPeersResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='known_peers', full_name='qrl.GetKnownPeersResp.known_peers', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=137,
  serialized_end=194,
)


_GETADDRESSSTATELOCALREQ = _descriptor.Descriptor(
  name='GetAddressStateLocalReq',
  full_name='qrl.GetAddressStateLocalReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address_idx', full_name='qrl.GetAddressStateLocalReq.address_idx', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=196,
  serialized_end=242,
)


_GETADDRESSSTATEREQ = _descriptor.Descriptor(
  name='GetAddressStateReq',
  full_name='qrl.GetAddressStateReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='qrl.GetAddressStateReq.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=281,
)


_GETADDRESSSTATERESP = _descriptor.Descriptor(
  name='GetAddressStateResp',
  full_name='qrl.GetAddressStateResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='qrl.GetAddressStateResp.state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=283,
  serialized_end=338,
)


_TRANSFERCOINSREQ = _descriptor.Descriptor(
  name='TransferCoinsReq',
  full_name='qrl.TransferCoinsReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address_from', full_name='qrl.TransferCoinsReq.address_from', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='address_to', full_name='qrl.TransferCoinsReq.address_to', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amount', full_name='qrl.TransferCoinsReq.amount', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fee', full_name='qrl.TransferCoinsReq.fee', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='xmss_pk', full_name='qrl.TransferCoinsReq.xmss_pk', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='xmss_ots_index', full_name='qrl.TransferCoinsReq.xmss_ots_index', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=341,
  serialized_end=471,
)


_TRANSFERCOINSRESP = _descriptor.Descriptor(
  name='TransferCoinsResp',
  full_name='qrl.TransferCoinsResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transaction_unsigned', full_name='qrl.TransferCoinsResp.transaction_unsigned', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=473,
  serialized_end=540,
)


_PUSHTRANSACTIONREQ = _descriptor.Descriptor(
  name='PushTransactionReq',
  full_name='qrl.PushTransactionReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transaction_signed', full_name='qrl.PushTransactionReq.transaction_signed', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=542,
  serialized_end=608,
)


_PUSHTRANSACTIONREQRESP = _descriptor.Descriptor(
  name='PushTransactionReqResp',
  full_name='qrl.PushTransactionReqResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='some_response', full_name='qrl.PushTransactionReqResp.some_response', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=610,
  serialized_end=657,
)


_WALLETSTORE = _descriptor.Descriptor(
  name='WalletStore',
  full_name='qrl.WalletStore',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='wallets', full_name='qrl.WalletStore.wallets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=659,
  serialized_end=702,
)


_WALLET = _descriptor.Descriptor(
  name='Wallet',
  full_name='qrl.Wallet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='qrl.Wallet.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mnemonic', full_name='qrl.Wallet.mnemonic', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='xmss_index', full_name='qrl.Wallet.xmss_index', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=704,
  serialized_end=767,
)


_KNOWNPEERS = _descriptor.Descriptor(
  name='KnownPeers',
  full_name='qrl.KnownPeers',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='peers', full_name='qrl.KnownPeers.peers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=769,
  serialized_end=807,
)


_PEER = _descriptor.Descriptor(
  name='Peer',
  full_name='qrl.Peer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='qrl.Peer.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=809,
  serialized_end=827,
)


_ADDRESSSTATE = _descriptor.Descriptor(
  name='AddressState',
  full_name='qrl.AddressState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='qrl.AddressState.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='balance', full_name='qrl.AddressState.balance', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nonce', full_name='qrl.AddressState.nonce', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pubhashes', full_name='qrl.AddressState.pubhashes', index=3,
      number=4, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transactions', full_name='qrl.AddressState.transactions', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=829,
  serialized_end=951,
)


_BLOCKHEADER = _descriptor.Descriptor(
  name='BlockHeader',
  full_name='qrl.BlockHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_number', full_name='qrl.BlockHeader.block_number', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='epoch', full_name='qrl.BlockHeader.epoch', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='qrl.BlockHeader.timestamp', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hash_header', full_name='qrl.BlockHeader.hash_header', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hash_header_prev', full_name='qrl.BlockHeader.hash_header_prev', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reward_block', full_name='qrl.BlockHeader.reward_block', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reward_fee', full_name='qrl.BlockHeader.reward_fee', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='merkel_root', full_name='qrl.BlockHeader.merkel_root', index=7,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hash_reveal', full_name='qrl.BlockHeader.hash_reveal', index=8,
      number=9, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hash_vote', full_name='qrl.BlockHeader.hash_vote', index=9,
      number=10, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stake_selector', full_name='qrl.BlockHeader.stake_selector', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=954,
  serialized_end=1213,
)


_BLOCK = _descriptor.Descriptor(
  name='Block',
  full_name='qrl.Block',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='qrl.Block.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transactions', full_name='qrl.Block.transactions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dup_transactions', full_name='qrl.Block.dup_transactions', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='qrl.Block.state', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stake_list', full_name='qrl.Block.stake_list', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stake_seed', full_name='qrl.Block.stake_seed', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1216,
  serialized_end=1415,
)


_TRANSACTION = _descriptor.Descriptor(
  name='Transaction',
  full_name='qrl.Transaction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='qrl.Transaction.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nonce', full_name='qrl.Transaction.nonce', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr_from', full_name='qrl.Transaction.addr_from', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transaction_hash', full_name='qrl.Transaction.transaction_hash', index=3,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='public_hash', full_name='qrl.Transaction.public_hash', index=4,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='public_key', full_name='qrl.Transaction.public_key', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signature', full_name='qrl.Transaction.signature', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr_to', full_name='qrl.Transaction.addr_to', index=7,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amount', full_name='qrl.Transaction.amount', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fee', full_name='qrl.Transaction.fee', index=9,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='epoch', full_name='qrl.Transaction.epoch', index=10,
      number=11, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='finalized_blocknumber', full_name='qrl.Transaction.finalized_blocknumber', index=11,
      number=12, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='finalized_headerhash', full_name='qrl.Transaction.finalized_headerhash', index=12,
      number=13, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='public_key_slave', full_name='qrl.Transaction.public_key_slave', index=13,
      number=14, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stake_hash', full_name='qrl.Transaction.stake_hash', index=14,
      number=15, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dup_block_number', full_name='qrl.Transaction.dup_block_number', index=15,
      number=16, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dup_hash_header_prev', full_name='qrl.Transaction.dup_hash_header_prev', index=16,
      number=17, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dup_coinbase1_hhash', full_name='qrl.Transaction.dup_coinbase1_hhash', index=17,
      number=18, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dup_coinbase2_hhash', full_name='qrl.Transaction.dup_coinbase2_hhash', index=18,
      number=19, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dup_coinbase1', full_name='qrl.Transaction.dup_coinbase1', index=19,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dup_coinbase2', full_name='qrl.Transaction.dup_coinbase2', index=20,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pk_kyber', full_name='qrl.Transaction.pk_kyber', index=21,
      number=22, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pk_tesla', full_name='qrl.Transaction.pk_tesla', index=22,
      number=23, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TRANSACTION_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1416,
  serialized_end=2061,
)

_GETKNOWNPEERSRESP.fields_by_name['known_peers'].message_type = _KNOWNPEERS
_GETADDRESSSTATERESP.fields_by_name['state'].message_type = _ADDRESSSTATE
_TRANSFERCOINSRESP.fields_by_name['transaction_unsigned'].message_type = _TRANSACTION
_PUSHTRANSACTIONREQ.fields_by_name['transaction_signed'].message_type = _TRANSACTION
_WALLETSTORE.fields_by_name['wallets'].message_type = _WALLET
_KNOWNPEERS.fields_by_name['peers'].message_type = _PEER
_ADDRESSSTATE.fields_by_name['transactions'].message_type = _TRANSACTION
_BLOCKHEADER.fields_by_name['timestamp'].message_type = _TIMESTAMP
_BLOCK.fields_by_name['header'].message_type = _BLOCKHEADER
_BLOCK.fields_by_name['transactions'].message_type = _TRANSACTION
_BLOCK.fields_by_name['dup_transactions'].message_type = _TRANSACTION
_BLOCK.fields_by_name['state'].message_type = _ADDRESSSTATE
_TRANSACTION.fields_by_name['type'].enum_type = _TRANSACTION_TYPE
_TRANSACTION.fields_by_name['dup_coinbase1'].message_type = _TRANSACTION
_TRANSACTION.fields_by_name['dup_coinbase2'].message_type = _TRANSACTION
_TRANSACTION_TYPE.containing_type = _TRANSACTION
DESCRIPTOR.message_types_by_name['Timestamp'] = _TIMESTAMP
DESCRIPTOR.message_types_by_name['PingReq'] = _PINGREQ
DESCRIPTOR.message_types_by_name['PongResp'] = _PONGRESP
DESCRIPTOR.message_types_by_name['GetKnownPeersReq'] = _GETKNOWNPEERSREQ
DESCRIPTOR.message_types_by_name['GetKnownPeersResp'] = _GETKNOWNPEERSRESP
DESCRIPTOR.message_types_by_name['GetAddressStateLocalReq'] = _GETADDRESSSTATELOCALREQ
DESCRIPTOR.message_types_by_name['GetAddressStateReq'] = _GETADDRESSSTATEREQ
DESCRIPTOR.message_types_by_name['GetAddressStateResp'] = _GETADDRESSSTATERESP
DESCRIPTOR.message_types_by_name['TransferCoinsReq'] = _TRANSFERCOINSREQ
DESCRIPTOR.message_types_by_name['TransferCoinsResp'] = _TRANSFERCOINSRESP
DESCRIPTOR.message_types_by_name['PushTransactionReq'] = _PUSHTRANSACTIONREQ
DESCRIPTOR.message_types_by_name['PushTransactionReqResp'] = _PUSHTRANSACTIONREQRESP
DESCRIPTOR.message_types_by_name['WalletStore'] = _WALLETSTORE
DESCRIPTOR.message_types_by_name['Wallet'] = _WALLET
DESCRIPTOR.message_types_by_name['KnownPeers'] = _KNOWNPEERS
DESCRIPTOR.message_types_by_name['Peer'] = _PEER
DESCRIPTOR.message_types_by_name['AddressState'] = _ADDRESSSTATE
DESCRIPTOR.message_types_by_name['BlockHeader'] = _BLOCKHEADER
DESCRIPTOR.message_types_by_name['Block'] = _BLOCK
DESCRIPTOR.message_types_by_name['Transaction'] = _TRANSACTION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Timestamp = _reflection.GeneratedProtocolMessageType('Timestamp', (_message.Message,), dict(
  DESCRIPTOR = _TIMESTAMP,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.Timestamp)
  ))
_sym_db.RegisterMessage(Timestamp)

PingReq = _reflection.GeneratedProtocolMessageType('PingReq', (_message.Message,), dict(
  DESCRIPTOR = _PINGREQ,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.PingReq)
  ))
_sym_db.RegisterMessage(PingReq)

PongResp = _reflection.GeneratedProtocolMessageType('PongResp', (_message.Message,), dict(
  DESCRIPTOR = _PONGRESP,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.PongResp)
  ))
_sym_db.RegisterMessage(PongResp)

GetKnownPeersReq = _reflection.GeneratedProtocolMessageType('GetKnownPeersReq', (_message.Message,), dict(
  DESCRIPTOR = _GETKNOWNPEERSREQ,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.GetKnownPeersReq)
  ))
_sym_db.RegisterMessage(GetKnownPeersReq)

GetKnownPeersResp = _reflection.GeneratedProtocolMessageType('GetKnownPeersResp', (_message.Message,), dict(
  DESCRIPTOR = _GETKNOWNPEERSRESP,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.GetKnownPeersResp)
  ))
_sym_db.RegisterMessage(GetKnownPeersResp)

GetAddressStateLocalReq = _reflection.GeneratedProtocolMessageType('GetAddressStateLocalReq', (_message.Message,), dict(
  DESCRIPTOR = _GETADDRESSSTATELOCALREQ,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.GetAddressStateLocalReq)
  ))
_sym_db.RegisterMessage(GetAddressStateLocalReq)

GetAddressStateReq = _reflection.GeneratedProtocolMessageType('GetAddressStateReq', (_message.Message,), dict(
  DESCRIPTOR = _GETADDRESSSTATEREQ,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.GetAddressStateReq)
  ))
_sym_db.RegisterMessage(GetAddressStateReq)

GetAddressStateResp = _reflection.GeneratedProtocolMessageType('GetAddressStateResp', (_message.Message,), dict(
  DESCRIPTOR = _GETADDRESSSTATERESP,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.GetAddressStateResp)
  ))
_sym_db.RegisterMessage(GetAddressStateResp)

TransferCoinsReq = _reflection.GeneratedProtocolMessageType('TransferCoinsReq', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFERCOINSREQ,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.TransferCoinsReq)
  ))
_sym_db.RegisterMessage(TransferCoinsReq)

TransferCoinsResp = _reflection.GeneratedProtocolMessageType('TransferCoinsResp', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFERCOINSRESP,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.TransferCoinsResp)
  ))
_sym_db.RegisterMessage(TransferCoinsResp)

PushTransactionReq = _reflection.GeneratedProtocolMessageType('PushTransactionReq', (_message.Message,), dict(
  DESCRIPTOR = _PUSHTRANSACTIONREQ,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.PushTransactionReq)
  ))
_sym_db.RegisterMessage(PushTransactionReq)

PushTransactionReqResp = _reflection.GeneratedProtocolMessageType('PushTransactionReqResp', (_message.Message,), dict(
  DESCRIPTOR = _PUSHTRANSACTIONREQRESP,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.PushTransactionReqResp)
  ))
_sym_db.RegisterMessage(PushTransactionReqResp)

WalletStore = _reflection.GeneratedProtocolMessageType('WalletStore', (_message.Message,), dict(
  DESCRIPTOR = _WALLETSTORE,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.WalletStore)
  ))
_sym_db.RegisterMessage(WalletStore)

Wallet = _reflection.GeneratedProtocolMessageType('Wallet', (_message.Message,), dict(
  DESCRIPTOR = _WALLET,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.Wallet)
  ))
_sym_db.RegisterMessage(Wallet)

KnownPeers = _reflection.GeneratedProtocolMessageType('KnownPeers', (_message.Message,), dict(
  DESCRIPTOR = _KNOWNPEERS,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.KnownPeers)
  ))
_sym_db.RegisterMessage(KnownPeers)

Peer = _reflection.GeneratedProtocolMessageType('Peer', (_message.Message,), dict(
  DESCRIPTOR = _PEER,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.Peer)
  ))
_sym_db.RegisterMessage(Peer)

AddressState = _reflection.GeneratedProtocolMessageType('AddressState', (_message.Message,), dict(
  DESCRIPTOR = _ADDRESSSTATE,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.AddressState)
  ))
_sym_db.RegisterMessage(AddressState)

BlockHeader = _reflection.GeneratedProtocolMessageType('BlockHeader', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKHEADER,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.BlockHeader)
  ))
_sym_db.RegisterMessage(BlockHeader)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), dict(
  DESCRIPTOR = _BLOCK,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.Block)
  ))
_sym_db.RegisterMessage(Block)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), dict(
  DESCRIPTOR = _TRANSACTION,
  __module__ = 'qrl_pb2'
  # @@protoc_insertion_point(class_scope:qrl.Transaction)
  ))
_sym_db.RegisterMessage(Transaction)



_P2PNODE = _descriptor.ServiceDescriptor(
  name='P2PNode',
  full_name='qrl.P2PNode',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=2063,
  serialized_end=2177,
  methods=[
  _descriptor.MethodDescriptor(
    name='Ping',
    full_name='qrl.P2PNode.Ping',
    index=0,
    containing_service=None,
    input_type=_PINGREQ,
    output_type=_PONGRESP,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetKnownPeers',
    full_name='qrl.P2PNode.GetKnownPeers',
    index=1,
    containing_service=None,
    input_type=_GETKNOWNPEERSREQ,
    output_type=_GETKNOWNPEERSRESP,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_P2PNODE)

DESCRIPTOR.services_by_name['P2PNode'] = _P2PNODE


_PUBLICAPI = _descriptor.ServiceDescriptor(
  name='PublicAPI',
  full_name='qrl.PublicAPI',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=2180,
  serialized_end=2552,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetKnownPeers',
    full_name='qrl.PublicAPI.GetKnownPeers',
    index=0,
    containing_service=None,
    input_type=_GETKNOWNPEERSREQ,
    output_type=_GETKNOWNPEERSRESP,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAddressState',
    full_name='qrl.PublicAPI.GetAddressState',
    index=1,
    containing_service=None,
    input_type=_GETADDRESSSTATEREQ,
    output_type=_GETADDRESSSTATERESP,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TransferCoins',
    full_name='qrl.PublicAPI.TransferCoins',
    index=2,
    containing_service=None,
    input_type=_TRANSFERCOINSREQ,
    output_type=_TRANSFERCOINSRESP,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PushTransaction',
    full_name='qrl.PublicAPI.PushTransaction',
    index=3,
    containing_service=None,
    input_type=_PUSHTRANSACTIONREQ,
    output_type=_PUSHTRANSACTIONREQRESP,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_PUBLICAPI)

DESCRIPTOR.services_by_name['PublicAPI'] = _PUBLICAPI


_TESTINGAPI = _descriptor.ServiceDescriptor(
  name='TestingAPI',
  full_name='qrl.TestingAPI',
  file=DESCRIPTOR,
  index=2,
  options=None,
  serialized_start=2413,
  serialized_end=2425,
  methods=[
])
_sym_db.RegisterServiceDescriptor(_TESTINGAPI)

DESCRIPTOR.services_by_name['TestingAPI'] = _TESTINGAPI

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class P2PNodeStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Ping = channel.unary_unary(
          '/qrl.P2PNode/Ping',
          request_serializer=PingReq.SerializeToString,
          response_deserializer=PongResp.FromString,
          )
      self.GetKnownPeers = channel.unary_unary(
          '/qrl.P2PNode/GetKnownPeers',
          request_serializer=GetKnownPeersReq.SerializeToString,
          response_deserializer=GetKnownPeersResp.FromString,
          )


  class P2PNodeServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Ping(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetKnownPeers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_P2PNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Ping': grpc.unary_unary_rpc_method_handler(
            servicer.Ping,
            request_deserializer=PingReq.FromString,
            response_serializer=PongResp.SerializeToString,
        ),
        'GetKnownPeers': grpc.unary_unary_rpc_method_handler(
            servicer.GetKnownPeers,
            request_deserializer=GetKnownPeersReq.FromString,
            response_serializer=GetKnownPeersResp.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qrl.P2PNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class PublicAPIStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetKnownPeers = channel.unary_unary(
          '/qrl.PublicAPI/GetKnownPeers',
          request_serializer=GetKnownPeersReq.SerializeToString,
          response_deserializer=GetKnownPeersResp.FromString,
          )
      self.GetAddressState = channel.unary_unary(
          '/qrl.PublicAPI/GetAddressState',
          request_serializer=GetAddressStateReq.SerializeToString,
          response_deserializer=GetAddressStateResp.FromString,
          )
      self.TransferCoins = channel.unary_unary(
          '/qrl.PublicAPI/TransferCoins',
          request_serializer=TransferCoinsReq.SerializeToString,
          response_deserializer=TransferCoinsResp.FromString,
          )
      self.PushTransaction = channel.unary_unary(
          '/qrl.PublicAPI/PushTransaction',
          request_serializer=PushTransactionReq.SerializeToString,
          response_deserializer=PushTransactionReqResp.FromString,
          )


  class PublicAPIServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetKnownPeers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAddressState(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TransferCoins(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PushTransaction(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_PublicAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetKnownPeers': grpc.unary_unary_rpc_method_handler(
            servicer.GetKnownPeers,
            request_deserializer=GetKnownPeersReq.FromString,
            response_serializer=GetKnownPeersResp.SerializeToString,
        ),
        'GetAddressState': grpc.unary_unary_rpc_method_handler(
            servicer.GetAddressState,
            request_deserializer=GetAddressStateReq.FromString,
            response_serializer=GetAddressStateResp.SerializeToString,
        ),
        'TransferCoins': grpc.unary_unary_rpc_method_handler(
            servicer.TransferCoins,
            request_deserializer=TransferCoinsReq.FromString,
            response_serializer=TransferCoinsResp.SerializeToString,
        ),
        'PushTransaction': grpc.unary_unary_rpc_method_handler(
            servicer.PushTransaction,
            request_deserializer=PushTransactionReq.FromString,
            response_serializer=PushTransactionReqResp.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qrl.PublicAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class TestingAPIStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """


  class TestingAPIServicer(object):
    # missing associated documentation comment in .proto file
    pass


  def add_TestingAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qrl.TestingAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaP2PNodeServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Ping(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetKnownPeers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaP2PNodeStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Ping(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Ping.future = None
    def GetKnownPeers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetKnownPeers.future = None


  def beta_create_P2PNode_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qrl.P2PNode', 'GetKnownPeers'): GetKnownPeersReq.FromString,
      ('qrl.P2PNode', 'Ping'): PingReq.FromString,
    }
    response_serializers = {
      ('qrl.P2PNode', 'GetKnownPeers'): GetKnownPeersResp.SerializeToString,
      ('qrl.P2PNode', 'Ping'): PongResp.SerializeToString,
    }
    method_implementations = {
      ('qrl.P2PNode', 'GetKnownPeers'): face_utilities.unary_unary_inline(servicer.GetKnownPeers),
      ('qrl.P2PNode', 'Ping'): face_utilities.unary_unary_inline(servicer.Ping),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_P2PNode_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qrl.P2PNode', 'GetKnownPeers'): GetKnownPeersReq.SerializeToString,
      ('qrl.P2PNode', 'Ping'): PingReq.SerializeToString,
    }
    response_deserializers = {
      ('qrl.P2PNode', 'GetKnownPeers'): GetKnownPeersResp.FromString,
      ('qrl.P2PNode', 'Ping'): PongResp.FromString,
    }
    cardinalities = {
      'GetKnownPeers': cardinality.Cardinality.UNARY_UNARY,
      'Ping': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qrl.P2PNode', cardinalities, options=stub_options)


  class BetaPublicAPIServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetKnownPeers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAddressState(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TransferCoins(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PushTransaction(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaPublicAPIStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetKnownPeers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetKnownPeers.future = None
    def GetAddressState(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAddressState.future = None
    def TransferCoins(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    TransferCoins.future = None
    def PushTransaction(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    PushTransaction.future = None


  def beta_create_PublicAPI_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qrl.PublicAPI', 'GetAddressState'): GetAddressStateReq.FromString,
      ('qrl.PublicAPI', 'GetKnownPeers'): GetKnownPeersReq.FromString,
      ('qrl.PublicAPI', 'PushTransaction'): PushTransactionReq.FromString,
      ('qrl.PublicAPI', 'TransferCoins'): TransferCoinsReq.FromString,
    }
    response_serializers = {
      ('qrl.PublicAPI', 'GetAddressState'): GetAddressStateResp.SerializeToString,
      ('qrl.PublicAPI', 'GetKnownPeers'): GetKnownPeersResp.SerializeToString,
      ('qrl.PublicAPI', 'PushTransaction'): PushTransactionReqResp.SerializeToString,
      ('qrl.PublicAPI', 'TransferCoins'): TransferCoinsResp.SerializeToString,
    }
    method_implementations = {
      ('qrl.PublicAPI', 'GetAddressState'): face_utilities.unary_unary_inline(servicer.GetAddressState),
      ('qrl.PublicAPI', 'GetKnownPeers'): face_utilities.unary_unary_inline(servicer.GetKnownPeers),
      ('qrl.PublicAPI', 'PushTransaction'): face_utilities.unary_unary_inline(servicer.PushTransaction),
      ('qrl.PublicAPI', 'TransferCoins'): face_utilities.unary_unary_inline(servicer.TransferCoins),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_PublicAPI_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qrl.PublicAPI', 'GetAddressState'): GetAddressStateReq.SerializeToString,
      ('qrl.PublicAPI', 'GetKnownPeers'): GetKnownPeersReq.SerializeToString,
      ('qrl.PublicAPI', 'PushTransaction'): PushTransactionReq.SerializeToString,
      ('qrl.PublicAPI', 'TransferCoins'): TransferCoinsReq.SerializeToString,
    }
    response_deserializers = {
      ('qrl.PublicAPI', 'GetAddressState'): GetAddressStateResp.FromString,
      ('qrl.PublicAPI', 'GetKnownPeers'): GetKnownPeersResp.FromString,
      ('qrl.PublicAPI', 'PushTransaction'): PushTransactionReqResp.FromString,
      ('qrl.PublicAPI', 'TransferCoins'): TransferCoinsResp.FromString,
    }
    cardinalities = {
      'GetAddressState': cardinality.Cardinality.UNARY_UNARY,
      'GetKnownPeers': cardinality.Cardinality.UNARY_UNARY,
      'PushTransaction': cardinality.Cardinality.UNARY_UNARY,
      'TransferCoins': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qrl.PublicAPI', cardinalities, options=stub_options)


  class BetaTestingAPIServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass


  class BetaTestingAPIStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass


  def beta_create_TestingAPI_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
    }
    response_serializers = {
    }
    method_implementations = {
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_TestingAPI_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
    }
    response_deserializers = {
    }
    cardinalities = {
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qrl.TestingAPI', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
